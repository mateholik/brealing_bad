[{"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/index.js":"1","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/App.js":"2","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Header.js":"3","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/CharacterGrid.js":"4","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/CharacterItem.js":"5","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Search.js":"6","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Spinner.js":"7","/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/SinglePage.js":"8"},{"size":197,"mtime":1608462800243,"results":"9","hashOfConfig":"10"},{"size":1271,"mtime":1608505717311,"results":"11","hashOfConfig":"10"},{"size":286,"mtime":1608496166598,"results":"12","hashOfConfig":"10"},{"size":411,"mtime":1608499531382,"results":"13","hashOfConfig":"10"},{"size":974,"mtime":1608504181992,"results":"14","hashOfConfig":"10"},{"size":448,"mtime":1608492583519,"results":"15","hashOfConfig":"10"},{"size":236,"mtime":1608493349707,"results":"16","hashOfConfig":"10"},{"size":1649,"mtime":1608505249567,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sur2ud",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/index.js",[],["36","37"],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/App.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Header.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/CharacterGrid.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/CharacterItem.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Search.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/ui/Spinner.js",[],"/Users/user/Desktop/www/Digital Ocean/javascript/breaking_bad/src/components/characters/SinglePage.js",["38","39","40"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport axios from 'axios'\nimport Spinner from './../ui/Spinner'\n\nconst SinglePage = ({ items }) => {\n  const { id } = useParams()\n  const item = items.filter(item => {\n    return item.char_id == id.substring(1)\n  })\n\n  const [quote, setQuote] = useState([])\n  const [isLoading, setIsLoading] = useState([true])\n\n  useEffect(() => {\n    const fetchQuote = async () => {\n      const result = await axios.get(`https://www.breakingbadapi.com/api/quotes/${id.substring(1)}`)\n      setQuote(result.data[0].quote)\n      setIsLoading(false)\n    }\n    fetchQuote()\n  }, [])\n\n  return (\n    <div className=\"single-page\">\n      <div className=\"left\">\n        <p>\n          <span className=\"soft\">Name:</span>\n          <span className=\"white\">{item[0].name}</span>\n        </p>\n        <p>\n          <span className=\"soft\">Nickname:</span>\n          <span className=\"white\">{item[0].nickname}\n          </span>\n        </p>\n        <p>\n          <span className=\"soft\">Birthday:</span>\n          <span className=\"white\">{item[0].birthday}</span>\n        </p>\n        <p>\n          <span className=\"soft\">Actor:</span>\n          <span className=\"white\">{item[0].portrayed}</span>\n        </p>\n        <p>\n          <span className=\"soft\">Status:</span>\n          <span className=\"white\">{item[0].status}</span>\n        </p>\n        <div className=\"quote\">\n          {isLoading ? <Spinner /> : <q>{quote}</q>}\n        </div>\n      </div>\n      <div className=\"right\">\n        <img src={item[0].img} alt=\"image\" />\n      </div>\n    </div>\n  )\n}\n\nexport default SinglePage",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":9,"column":25,"nodeType":"47","messageId":"48","endLine":9,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":22,"column":6,"nodeType":"51","endLine":22,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":53,"column":9,"nodeType":"55","endLine":53,"endColumn":46},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["58"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [id]",{"range":"61","text":"62"},[653,655],"[id]"]